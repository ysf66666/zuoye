import java.util.Scanner;
/*
   *求一个整数数组的最大子数组之和
   *思路：先定义一个整数数组，然后找出所有子数组求和，并比较他们的和，输出最大的结果
   * 时间复杂度为o(n^3)
 */
public class SumArray {

    public static int max(int a,int b)
    {
        return a>b?a:b;
    }

    public static void main(String[] args) {

        //定义一个数组
        int []a = new int[5];
        int sum1 = 0,sum2=0;
        Scanner sc = new Scanner(System.in);
        int num = 0;
        for(int i = 0;i < a.length;i++){
            num = sc.nextInt();
            a[i] = num;
        }

        //找出该数组的所有子数组
        for(int i = 0;i < a.length;i++){//循环一：子数组的起始坐标为i，共有a.length个
          for(int k = a.length-1;k >= i;k--)//循环二：子数组的首项再数组中的下标为0的个数有a.length个
          {
              for(int j = k;j >= i;j--) //循环三：求子数组的和
              {
                  sum1 += a[j];
              }
              sum2 = max(sum1,sum2);    //取最大值
              sum1 = 0;
          }
        }
        System.out.println("最大子数组的和为："+sum2);
    }
}
